@{
    ViewData["Title"] = "Home Page";
}
@model ExchangeQueryModel

<script type="text/javascript">

    var myLineChart;

    $(document).ready(function () {
        getChart();
        //key timeout START
        var textInput = document.getElementById("tbAmount");
        var timeout = null;
        textInput.onkeyup = function (e) {
            clearTimeout(timeout);
            timeout = setTimeout(calculate, 500);
        };
        //key timeout END
    });

    function calculate() {
        if (!$("#currencyForm").valid())
            return

        $.ajax({
            type: "GET",
            url: '/Home/OnGetExchangeRate',
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                currencyFrom: document.getElementById("dlCurrencyFrom").value,
                currencyTo: document.getElementById("dlCurrencyTo").value,
                amount: document.getElementById("tbAmount").value.replace(".", ","),
                direction: true
            }
        }).done(function (data) {
            document.getElementById("tbResult").value = data.toFixed(2);
        })
    }

    function swap() {
        temp = document.getElementById("dlCurrencyFrom").value,
        document.getElementById("dlCurrencyFrom").value = document.getElementById("dlCurrencyTo").value,
        document.getElementById("dlCurrencyTo").value = temp

        update();
    }

    function update() { 
        getChart();

        if (document.getElementById("tbAmount").value.length > 0)
            calculate();
        }
 
    function getChart() {
        $.ajax({
            type: "GET",
            url: "/Home/OnGetHistoricalData",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: {
                currencyFrom: document.getElementById("dlCurrencyFrom").value,
                currencyTo: document.getElementById("dlCurrencyTo").value
            }
        }).done(function (data) {
            plotChart(data)
        })
    }

    function plotChart(data) {
        if (myLineChart && myLineChart.chart)
            myLineChart.chart.destroy();

        var ctx = $("#myChart").get(0).getContext("2d");
        myLineChart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: data.map(x => x.x.substring(0, 10)),
                datasets: [{
                    label: document.getElementById("dlCurrencyFrom").value + " to " + document.getElementById("dlCurrencyTo").value,
                    data: data,
                    borderColor: "#3e95cd",
                    fill: false
                }]
            },
            options: {
            }
        });
        myLineChart.update();
    }

</script>
<form id="currencyForm" method="post">
    <br />
    <div class="container">
        <div class="row">

            <div class="col-sm-2">
                @Html.DropDownListFor(Model => Model.CurrencyFrom,
                                    (SelectList)ViewData["SelectList"],
                                    null, new { id= "dlCurrencyFrom", onchange = "update()", value = "EUR", @class = "form-control" })
            </div>
            <div class="col-sm-3">
                @Html.TextBoxFor(Model => Model.Amount, null, new { id = "tbAmount", @class = "form-control", type = "number", maxlength = 20 })
                @Html.ValidationMessageFor(Model => Model.Amount, null, new { @class="text-danger"})
            </div>
            <div class="col-sm-2">
                <button type="button" class="btn btn-link center-block">
                    <span class="glyphicon glyphicon-transfer" onclick="swap();"></span>
                </button>
            </div>
            <div class="col-sm-2">
                @Html.DropDownListFor(Model => Model.CurrencyTo,
                   (SelectList)ViewData["SelectList"],
                   null, new { id= "dlCurrencyTo", onchange = "update()", value = "EUR", @class = "form-control" })
            </div>
            <div class="col-sm-3">
                @Html.TextBox("tbResult", null, new { @class = "form-control", @readonly = "true" })
            </div>
        </div>
    </div>
</form>

<canvas id="myChart"></canvas>



